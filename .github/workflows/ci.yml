---
name: CI

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

jobs:
  yaml_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running YAMLlint
        uses: "docker://pipelinecomponents/yamllint:latest"
        with:
          args: yamllint .
  remark_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Remark lint
        uses: "docker://pipelinecomponents/flake8:latest"
        continue-on-error: true
        with:
          args: "flake8 --verbose ."
  flake_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1

  black:
    name: Check PyArr formatting with Black
    runs-on: ubuntu-latest
    steps:
      - name: Getting your configuration from GitHub
        uses: actions/checkout@v1
      - name: Running Black Check
        uses: lgeiger/black-action@master
        with:
          args: ". --check"
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [yaml_lint, remark_lint, flake_lint, black]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@main
        with:
          configuration: ".github/release-changelog-builder.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog}}
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
